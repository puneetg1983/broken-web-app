# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Node.js HTTP 500 App

on:
  push:
    branches:
      - main
  workflow_dispatch:

# Add concurrency configuration to ensure only one workflow runs at a time
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

env:
  APP_SERVICE_NAME: broken-node-http500-${{ github.actor }}
  APP_SERVICE_PLAN_NAME: broken-node-common-${{ github.actor }}
  WEBAPP_URL: https://broken-node-http500-${{ github.actor }}.azurewebsites.net
  CONFIGURATION: 'production'
  SUBSCRIPTION_ID: ${{ secrets.SUBSCRIPTIONID }}
  RESOURCE_GROUP_NAME: ${{ secrets.RESOURCE_GROUP_NAME }}
  LOG_ANALYTICS_NAME: broken-node-${{ github.actor }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read #This is required for actions/checkout

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install dependencies
      working-directory: node
      run: npm ci

    - name: Build and package application
      working-directory: node
      run: |
        # Test app starts locally
        timeout 10s node app.js || echo "App test completed"
        
        # Run build if available
        npm run build 2>/dev/null || echo "No build script found"
        
        # Create deployment package
        mkdir -p deploy
        cp -r . deploy/
        echo "✅ Deployment package created"

    - name: Upload artifact for deployment job
      uses: actions/upload-artifact@v4
      with:
        name: node-app
        path: node/deploy/

  deploy:
    runs-on: ubuntu-latest
    needs: build
    
    permissions:
      id-token: write #This is required for requesting the JWT
      contents: read #This is required for actions/checkout

    steps:
    - uses: actions/checkout@v4
    
    - name: Download artifact from build job
      uses: actions/download-artifact@v4
      with:
        name: node-app
        path: ./deploy
    
    - name: Login to Azure
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.MANAGED_IDENTITY_CLIENTID }}
        tenant-id: ${{ secrets.TENANTID }}
        subscription-id: ${{ secrets.SUBSCRIPTIONID }}

    - name: Deploy infrastructure and app
      run: |
        # Deploy Log Analytics
        az deployment group create \
          --subscription "${{ env.SUBSCRIPTION_ID }}" \
          --resource-group "${{ env.RESOURCE_GROUP_NAME }}" \
          --template-file "./node/infra/loganalytics.bicep" \
          --parameters logAnalyticsName="${{ env.LOG_ANALYTICS_NAME }}" \
          --name "loganalytics-${{ github.run_number }}"
        
        # Deploy Web App infrastructure
        az deployment group create \
          --subscription "${{ env.SUBSCRIPTION_ID }}" \
          --resource-group "${{ env.RESOURCE_GROUP_NAME }}" \
          --template-file "./node/infra/http500.bicep" \
          --parameters appServiceName="${{ env.APP_SERVICE_NAME }}" appServicePlanName="${{ env.APP_SERVICE_PLAN_NAME }}" logAnalyticsName="${{ env.LOG_ANALYTICS_NAME }}" \
          --name "webapp-${{ github.run_number }}"

    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v3
      with:
        app-name: '${{ env.APP_SERVICE_NAME }}'
        package: ./deploy

    - name: Verify deployment
      run: |
        sleep 30
        curl -f "${{ env.WEBAPP_URL }}" && echo "✅ App deployed successfully" || echo "❌ Deployment verification failed"

  test:
    runs-on: ubuntu-latest
    needs: deploy
    
    steps:
    - name: Test application endpoints
      run: |
        sleep 30
        
        # Test main endpoints
        curl -f "${{ env.WEBAPP_URL }}/" || exit 1
        curl -f "${{ env.WEBAPP_URL }}/process-metrics" || exit 1
        curl -f "${{ env.WEBAPP_URL }}/scenarios/http500/http500_1" || exit 1
        
        # Test HTTP 500 scenario (should return 500)
        status=$(curl -s -o /dev/null -w "%{http_code}" "${{ env.WEBAPP_URL }}/scenarios/http500/http500_1/actual")
        [ "$status" = "500" ] && echo "✅ HTTP 500 test passed" || exit 1
        
        echo "✅ All tests passed!"
      env:
        WEBAPP_URL: ${{ env.WEBAPP_URL }}
