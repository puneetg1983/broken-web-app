# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: ASP.NET Core - Out of Memory App

on:
  push:
    branches:
      - main
  workflow_dispatch:

# Add concurrency configuration to ensure only one workflow runs at a time
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

env:
  APP_SERVICE_NAME: broken-core-outofmemory-${{ github.actor }}
  APP_SERVICE_PLAN_NAME: broken-core-outofmemory-${{ github.actor }}
  WEBAPP_URL: https://broken-core-outofmemory-${{ github.actor }}.azurewebsites.net
  CONFIGURATION: 'Release'
  SUBSCRIPTION_ID: ${{ secrets.SUBSCRIPTIONID }}
  RESOURCE_GROUP_NAME: ${{ secrets.RESOURCE_GROUP_NAME }}
  LOG_ANALYTICS_NAME: broken-core-${{ github.actor }}

jobs:
  build:
    runs-on: windows-latest
    permissions:
      contents: read #This is required for actions/checkout

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Restore dependencies
      run: dotnet restore AspNetCore/DiagnosticScenarios.sln

    - name: Build
      run: dotnet build AspNetCore/DiagnosticScenarios.sln --configuration Release --no-restore

    - name: Publish
      run: dotnet publish AspNetCore/DiagnosticScenarios.Web/DiagnosticScenarios.Web.csproj --configuration Release --output ./published --no-build

    - name: Upload artifact for deployment job
      uses: actions/upload-artifact@v4
      with:
        name: ASP-app
        path: './published/**'

  deploy:
    runs-on: windows-latest
    needs: build
    
    permissions:
      id-token: write #This is required for requesting the JWT
      contents: read #This is required for actions/checkout

    steps:
    - uses: actions/checkout@v4
    
    - name: Download artifact from build job
      uses: actions/download-artifact@v4
      with:
        name: ASP-app
    
    - name: Login to Azure
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.MANAGED_IDENTITY_CLIENTID }}
        tenant-id: ${{ secrets.TENANTID }}
        subscription-id: ${{ secrets.SUBSCRIPTIONID }}

    - name: List folder structure for debugging
      run: Get-ChildItem -Recurse

    - name: Deploy Log Analytics Workspace
      uses: azure/arm-deploy@v1
      with:
        subscriptionId: ${{ env.SUBSCRIPTION_ID }}
        resourceGroupName: ${{ env.RESOURCE_GROUP_NAME }}
        template: ./AspNetCore/infra/loganalytics.bicep
        parameters: logAnalyticsName=${{ env.LOG_ANALYTICS_NAME }}
        deploymentName: loganalytics-outofmemory-${{ github.run_number }}

    - name: Deploy Bicep (Web App & App Service Plan) with Retry
      shell: pwsh
      run: |
        $maxAttempts = 3
        $attempt = 1
        while ($attempt -le $maxAttempts) {
          Write-Host "Attempt $attempt of $maxAttempts for Bicep deployment"
          try {
            az deployment group create `
              --subscription "${{ env.SUBSCRIPTION_ID }}" `
              --resource-group "${{ env.RESOURCE_GROUP_NAME }}" `
              --template-file "./AspNetCore/infra/outofmemory.bicep" `
              --parameters appServiceName="${{ env.APP_SERVICE_NAME }}" appServicePlanName="${{ env.APP_SERVICE_PLAN_NAME }}" logAnalyticsName="${{ env.LOG_ANALYTICS_NAME }}" `
              --name "outofmemory-deployment-${{ github.run_number }}"
            Write-Host "Bicep deployment succeeded on attempt $attempt"
            break
          }
          catch {
            Write-Host "Bicep deployment failed on attempt $attempt"
            if ($attempt -eq $maxAttempts) {
              Write-Host "All attempts failed. Exiting."
              exit 1
            }
            Write-Host "Waiting 30 seconds before retry..."
            Start-Sleep -Seconds 30
            $attempt++
          }
        }

    - name: Deploy to Azure Web App
      id: deploy-to-webapp
      uses: azure/webapps-deploy@v3
      with:
        app-name: '${{ env.APP_SERVICE_NAME }}'
        slot-name: 'Production'
        package: . 